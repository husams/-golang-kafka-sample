version: '3'

services:
  app:
    # Uncomment the next line to use a non-root user. On Linux, this will prevent
    # new files getting created as root, but you may need to update the USER_UID
    # and USER_GID in .devcontainer/Dockerfile to match your user if not 1000.
    user: vscode

    build: 
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - "../kafka:/go/src/kafka"
      - "..:/workspace"
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Web service port
    ports:
      - 8080:8080
      
    networks: 
      - default
    
  zookeeper2:
    image: confluentinc/cp-zookeeper:5.3.1
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    
    networks:
      - default

  broker2:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeeper2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper2:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092,PLAINTEXT_HOST://broker2:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper2:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    
    networks:
      - default
      
networks:
  default:
